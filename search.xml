<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Git的基本用法]]></title>
    <url>%2F2019%2F06%2F18%2FGit%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[git上传项目到github示意图： Workspace：工作区 Index / Stage：暂存区 Repository：仓库区(或本地仓库) Remote：远程仓库 安装Ubuntu：apt-get install git 常用命令 初始化(init) 12# 初始化项目，切换到项目目录，执行下面操作$ git init 配置(config) 12345# 设置提交代码时的用户信息$ git config [--global] user.email 你的邮箱$ git config [--global] user.name 你的用户名# 显示当前的git配置$ git config --list 状态(status) 12# 显示状态信息，包括文件修改，文件提交等信息$ git status 添加(add)/删除(rm) 123456# 将文件添加到暂存区(Index / Stage)$ git add hello.c# 将当前项目下的所有文件添加到暂存区(Index / Stage)$ git add .# 删除工作区(Workspace)文件，并且将这次删除的文件放入暂存区(Index / Stage)$ git rm hello.c 代码提交(commit) 12# 提交暂存区到仓库区$ git commit -m [备注] 上传远程(push) 12# 上传本地指定分支到远程仓库$ git push [remote] [branch] 撤销(checkout) 123456# 恢复暂存区(Index / Stage)的指定文件到工作区(Workspace)$ git checkout [file]# 恢复摸个commit的指定文件到暂存区和工作区$ git checkout [commit] [file]# 恢复暂存区的所有文件到工作区$ git checkout 使用Git上传本地项目到github上 安装git 1$ apt-get install git 配置 12$ git config --global user.name &quot;用户名&quot;$ git config --global user.email &quot;邮箱&quot; 生成密钥 12345# 切换到用户目录$ cd ~# 生成密钥$ ssh-keygen -t rsa -C "邮箱"$ cd .ssh 复制id_rsa.pub文件内容，在github中Settings选项中SSH and GPG keys选项，右侧点击 New SSH key，将idb_rsa.pub中的内容复制到Key中，Title随便填 将本地项目上传到Github 切换到项目目录下 123456# 初始化项目$ git init# 添加项目下所有文件到暂存区(Index / Stage)$ git add .# 将暂存区文件提交到本地仓库$ git commit -m "这是备注" 关联Github上创建的仓库 1$ git remote add origin xxxxxxxxxx(这里输入github仓库地址) 将本地仓库文件上传到远程Github仓库 1$ git push origin [branch] 参考：http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html ​ https://www.cnblogs.com/sdcs/p/8270029.html]]></content>
      <categories>
        <category>工具</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[markdown的用法]]></title>
    <url>%2F2019%2F03%2F26%2Fmarkdown%E7%9A%84%E7%94%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[标题 最多可以展示六级标题 # 一级标题 ## 二级标题 ####### 六级级标题 效果如下： 一级标题二级标题六级标题 列表无序列表用法：利用星号*，加号+，减号- 来标记无序列表 * one* two* three 效果如下： one two three 把*换成+或是-效果一样 有序列表用法：在列表内容前添加标记数字如：1.或是2.等等 1. one2. two3. three 效果如下： one two three 引用用法：在需要引用的文字前面加大于号&gt; &gt; 这是需要引用的文字 效果如下： 这是需要引用的文字 强调粗体用法：在需要加粗的文字前后加两个*（或是_）号 **这是需要加粗的文字**__这是需要加粗的文字__ 效果如下：这是需要加粗的文字这是需要加粗的文字 斜体用法：在需要倾斜的文字前后加一个*（或是_）号 *这是需要倾斜的文字*_这是需要倾斜的文字_ 效果如下：这是需要倾斜的文字这是需要倾斜的文字 注明：要使文字变为粗斜体，可以在文字前后加三个*（或是_）号 删除线用法：在需要加删除线的文字前后加两个波浪号~~~这是需要加删除线的文字~~ 效果如下：这是需要加删除线的文字 代码块用法：利用反引号`或是&lt;pre&gt;&lt;/pre&gt;来标记代码块 `这是一个反引号标记的代码块`&lt;pre&gt;这是pre标签标记的代码块&lt;/pre&gt; 效果如下：这是一个反引号标记的代码块 这是pre标签标记的代码块 注明：(1)如果代码块中包含反引号，可以在代码块前后添加两个反引号`，包含两个连续的反引号时那在代码块前后添加三个反引号`(2)连续两个tab键起始的段落默认为代码块 分隔线用法：使用***或是---或是___ 效果如下： 换行用法：连续两个以上空格+回车 或是 使用标签&lt;br&gt; 链接用法：对于网站链接文字用中括号[]括起，指向的网站链接用小括号()括起[百度](www.baidu.com) 效果如下：百度 图片用法：在插入链接语法上，在前面加上感叹号!![图片](https://www.baidu.com/img/bd_logo1.png) 效果如下： 表格用法：markdown插入表格相对比较复杂，这里利用例子直接说明 1234| 标题1 | 标题2 | 标题3 || ------ | ------ | ------ || 左对齐1 | 居中对齐1 | 右对齐1 || 左对齐2 | 居中对齐2 | 右对齐2 | 效果如下：| 标题1 | 标题2 | 标题3 || :- | :-: | -: || 左对齐1 | 居中对齐1 | 右对齐1 || 左对齐2 | 居中对齐2 | 右对齐2 | 说明：(1) 表头与内容分割横线-至少有1个(2) -:表示内容和标题栏居右对齐，:-表示内容和标题栏居左对齐，:-:表示内容和标题栏居中对齐(3) 第一个和最后一个分隔符|可以省去 字体、字号和颜色用法：123&lt;font face=&apos;微软雅黑&apos;&gt;这是微软雅黑&lt;/font&gt;&lt;font color=red&gt;这是灰色&lt;/font&gt;&lt;font size=10&gt;字体大小为：10&lt;/font&gt; 效果如下： 这是微软雅黑 这是红色 字体大小为：5 背景色用法：利用内置的html标签12345&lt;table&gt; &lt;tr&gt; &lt;td bgcolor=red&gt;背景颜色&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 效果如下： 背景颜色 附录：markdown中文文档：https://markdown-zh.readthedocs.io/en/latest/]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>工具</tag>
      </tags>
  </entry>
</search>
